#!/usr/bin/env ruby

require 'rubygems'
require 'gli'

require "slide-em-up"

include GLI::App

version "0.3.5" # SlideEmUp::VERSION


desc 'Create new slide-em-up presentation'
arg_name 'dir_name'
long_desc 'This command helps start a new slide-em-up presentation by setting up the proper directory structure for you.  It takes the directory name you would like slide-em-up to create for you.'
command [:init] do |c|

  c.action do |global_options,options,args|
    raise "dir_name is required" if args.empty?
    SlideEmUp::Utils.init_directory(args[0])
    puts "Done. Run 'slide-em-up serve' in #{args[0]}/ dir to see slideshow"
  end
end


desc 'Install new slide-em-up theme'
arg_name 'repository_url'
long_desc 'Installs theme under ~/.slide-em-up.'
command [:install_theme] do |c|
  c.action do |global_options,options,args|
    raise "repository_url is required" if args.empty?
    SlideEmUp::Utils.install_theme(args[0])
    puts "Done."
  end
end


desc 'Puts your slide-em-up presentation into a gh-pages branch'
long_desc 'Generates a static version of your presentation into your gh-pages branch for publishing to GitHub Pages'
command :github do |c|
  c.action do |global_options,options,args|
    puts "Generating static content"
    SlideEmUp::Utils.github
    puts "I've updated your 'gh-pages' branch with the static version of your presentation."
    puts "Push it to GitHub to publish it. Probably something like:"
    puts
    puts "  git push origin gh-pages"
    puts
  end
end


desc 'Serves the slide-em-up presentation in the current directory'
command :serve do |c|
  c.desc 'Show verbose messaging'
  c.switch :verbose

  c.desc 'Port on which to run'
  c.default_value SlideEmUp::Server::DEFAULT_PORT
  c.flag [:p,:port]

  c.desc 'Host or ip to run on'
  c.default_value SlideEmUp::Server::DEFAULT_ADDRESS
  c.flag [:h,:host]

  c.desc 'API key for remote access'
  c.flag [:remote_key]

  c.action do |global_options,options,args|
    server = SlideEmUp::Server.new(options).start
    puts "Your remote key is #{server.remote_key}\n\n"
    server.start
  end
end


desc 'Generate static version of presentation'
long_desc 'Creates a static version of the presentation in "static" directory'
arg_name 'static_dir'
command [:static] do |c|
  c.desc 'Port on which to run'
  c.default_value SlideEmUp::Server::DEFAULT_PORT
  c.flag [:p,:port]

  c.action do |global_options,options,args|
    raise "static_dir is required" if args.empty?
    SlideEmUp::Utils.generate_static(args[0], options)
  end
end


desc 'Serves static version of presentation'
long_desc 'Serves static version of presentation'
command [:serve_static] do |c|
  c.desc 'Port on which to run'
  c.default_value "4242"
  c.flag [:p,:port]

  c.action do |global_options,options,args|
    Dir.chdir("static") do |dir|
      puts "Listening python server on http://0.0.0.0:#{options[:port]}"
      SlideEmUp::Utils.serve_static(options[:port])
    end
  end
end


pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abourt and not call the
  # chosen command
  true
end

post do |global,command,options,args|
  # Post logic here
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end


exit run(ARGV)
